// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';


function wait(cnt) {
  return new Promise((function (resolve, _reject) {
                setTimeout((function (param) {
                        if (cnt !== 0) {
                          return resolve({
                                      v: cnt,
                                      next: wait(cnt - 1 | 0)
                                    });
                        } else {
                          return resolve(undefined);
                        }
                      }), 1000);
                
              }));
}

function promiseTest(param) {
  var consume = function (p) {
    return new Promise((function (terminate, _reject) {
                  var consumeNext = function (p) {
                    p.then(function (oStream) {
                          return Promise.resolve(oStream !== undefined ? (console.log("As promised:" + oStream.v.toString()), consumeNext(oStream.next)) : (console.log("Terminated"), terminate(undefined)));
                        });
                    
                  };
                  return consumeNext(p);
                }));
  };
  return consume(wait(5)).then(function (result) {
              return Promise.resolve((console.log("Terminated final CATCH"), undefined));
            });
}

exports.wait = wait;
exports.promiseTest = promiseTest;
/* No side effect */
